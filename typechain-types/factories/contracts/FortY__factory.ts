/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FortY, FortYInterface } from "../../contracts/FortY";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160065534801561001557600080fd5b5060405161216338038061216383398181016040528101906100379190610554565b336040518060400160405280600581526020017f466f7274590000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f465254590000000000000000000000000000000000000000000000000000000081525081600390816100b391906107c7565b5080600490816100c391906107c7565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101385760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012f91906108da565b60405180910390fd5b6101478161019d60201b60201c565b506000600560146101000a81548160ff0219169083151502179055506101973361017561026360201b60201c565b600a6101819190610a64565b8361018c9190610aaf565b61026c60201b60201c565b50610b86565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60006012905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102de5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102d591906108da565b60405180910390fd5b6102f0600083836102f460201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361034657806002600082825461033a9190610af1565b92505081905550610419565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156103d2578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103c993929190610b34565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361046257806002600082825403925050819055506104af565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161050c9190610b6b565b60405180910390a3505050565b600080fd5b6000819050919050565b6105318161051e565b811461053c57600080fd5b50565b60008151905061054e81610528565b92915050565b60006020828403121561056a57610569610519565b5b60006105788482850161053f565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061060257607f821691505b602082108103610615576106146105bb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261067d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610640565b6106878683610640565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106c46106bf6106ba8461051e565b61069f565b61051e565b9050919050565b6000819050919050565b6106de836106a9565b6106f26106ea826106cb565b84845461064d565b825550505050565b600090565b6107076106fa565b6107128184846106d5565b505050565b5b818110156107365761072b6000826106ff565b600181019050610718565b5050565b601f82111561077b5761074c8161061b565b61075584610630565b81016020851015610764578190505b61077861077085610630565b830182610717565b50505b505050565b600082821c905092915050565b600061079e60001984600802610780565b1980831691505092915050565b60006107b7838361078d565b9150826002028217905092915050565b6107d082610581565b67ffffffffffffffff8111156107e9576107e861058c565b5b6107f382546105ea565b6107fe82828561073a565b600060209050601f831160018114610831576000841561081f578287015190505b61082985826107ab565b865550610891565b601f19841661083f8661061b565b60005b8281101561086757848901518255600182019150602085019450602081019050610842565b868310156108845784890151610880601f89168261078d565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108c482610899565b9050919050565b6108d4816108b9565b82525050565b60006020820190506108ef60008301846108cb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561097b57808604811115610957576109566108f5565b5b60018516156109665780820291505b808102905061097485610924565b945061093b565b94509492505050565b6000826109945760019050610a50565b816109a25760009050610a50565b81600181146109b857600281146109c2576109f1565b6001915050610a50565b60ff8411156109d4576109d36108f5565b5b8360020a9150848211156109eb576109ea6108f5565b5b50610a50565b5060208310610133831016604e8410600b8410161715610a265782820a905083811115610a2157610a206108f5565b5b610a50565b610a338484846001610931565b92509050818404811115610a4a57610a496108f5565b5b81810290505b9392505050565b600060ff82169050919050565b6000610a6f8261051e565b9150610a7a83610a57565b9250610aa77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610984565b905092915050565b6000610aba8261051e565b9150610ac58361051e565b9250828202610ad38161051e565b91508282048414831517610aea57610ae96108f5565b5b5092915050565b6000610afc8261051e565b9150610b078361051e565b9250828201905080821115610b1f57610b1e6108f5565b5b92915050565b610b2e8161051e565b82525050565b6000606082019050610b4960008301866108cb565b610b566020830185610b25565b610b636040830184610b25565b949350505050565b6000602082019050610b806000830184610b25565b92915050565b6115ce80610b956000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a001ecdd11610071578063a001ecdd14610272578063a9059cbb14610290578063ae06c1b7146102c0578063dd62ed3e146102dc578063f2fde38b1461030c5761010b565b8063715018a6146102225780638456cb591461022c5780638da5cb5b1461023657806395d89b41146102545761010b565b8063313ce567116100de578063313ce567146101ac5780633f4ba83a146101ca5780635c975abb146101d457806370a08231146101f25761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017c575b600080fd5b610118610328565b6040516101259190611021565b60405180910390f35b610148600480360381019061014391906110dc565b6103ba565b6040516101559190611137565b60405180910390f35b6101666103dd565b6040516101739190611161565b60405180910390f35b6101966004803603810190610191919061117c565b6103e7565b6040516101a39190611137565b60405180910390f35b6101b46104bf565b6040516101c191906111eb565b60405180910390f35b6101d26104c8565b005b6101dc6104da565b6040516101e99190611137565b60405180910390f35b61020c60048036038101906102079190611206565b6104f1565b6040516102199190611161565b60405180910390f35b61022a610539565b005b61023461054d565b005b61023e61055f565b60405161024b9190611242565b60405180910390f35b61025c610589565b6040516102699190611021565b60405180910390f35b61027a61061b565b6040516102879190611161565b60405180910390f35b6102aa60048036038101906102a591906110dc565b610621565b6040516102b79190611137565b60405180910390f35b6102da60048036038101906102d5919061125d565b610690565b005b6102f660048036038101906102f1919061128a565b6106e6565b6040516103039190611161565b60405180910390f35b61032660048036038101906103219190611206565b61076d565b005b606060038054610337906112f9565b80601f0160208091040260200160405190810160405280929190818152602001828054610363906112f9565b80156103b05780601f10610385576101008083540402835291602001916103b0565b820191906000526020600020905b81548152906001019060200180831161039357829003601f168201915b5050505050905090565b6000806103c56107f3565b90506103d28185856107fb565b600191505092915050565b6000600254905090565b60006103f161080d565b60006064600654846104039190611359565b61040d91906113ca565b90506000818461041d91906113fb565b905060006104328761042d6107f3565b6106e6565b905084811015610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e906114a1565b60405180910390fd5b610494876104836107f3565b878461048f91906113fb565b6107fb565b6104a6876104a061055f565b8561084e565b6104b187878461084e565b600193505050509392505050565b60006012905090565b6104d0610942565b6104d86109c9565b565b6000600560149054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610541610942565b61054b6000610a2c565b565b610555610942565b61055d610af2565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610598906112f9565b80601f01602080910402602001604051908101604052809291908181526020018280546105c4906112f9565b80156106115780601f106105e657610100808354040283529160200191610611565b820191906000526020600020905b8154815290600101906020018083116105f457829003601f168201915b5050505050905090565b60065481565b600061062b61080d565b600060646006548461063d9190611359565b61064791906113ca565b90506000818461065791906113fb565b90506106726106646107f3565b61066c61055f565b8461084e565b61068461067d6107f3565b868361084e565b60019250505092915050565b610698610942565b60148111156106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d39061150d565b60405180910390fd5b8060068190555050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610775610942565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107e75760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107de9190611242565b60405180910390fd5b6107f081610a2c565b50565b600033905090565b6108088383836001610b55565b505050565b6108156104da565b1561084c576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108c05760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108b79190611242565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109325760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109299190611242565b60405180910390fd5b61093d838383610d2c565b505050565b61094a6107f3565b73ffffffffffffffffffffffffffffffffffffffff1661096861055f565b73ffffffffffffffffffffffffffffffffffffffff16146109c75761098b6107f3565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109be9190611242565b60405180910390fd5b565b6109d1610f51565b6000600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610a156107f3565b604051610a229190611242565b60405180910390a1565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610afa61080d565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b3e6107f3565b604051610b4b9190611242565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bc75760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bbe9190611242565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c395760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c309190611242565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610d26578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d1d9190611161565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d7e578060026000828254610d72919061152d565b92505081905550610e51565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e0a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e0193929190611561565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e9a5780600260008282540392505081905550610ee7565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f449190611161565b60405180910390a3505050565b610f596104da565b610f8f576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fcb578082015181840152602081019050610fb0565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ff382610f91565b610ffd8185610f9c565b935061100d818560208601610fad565b61101681610fd7565b840191505092915050565b6000602082019050818103600083015261103b8184610fe8565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107382611048565b9050919050565b61108381611068565b811461108e57600080fd5b50565b6000813590506110a08161107a565b92915050565b6000819050919050565b6110b9816110a6565b81146110c457600080fd5b50565b6000813590506110d6816110b0565b92915050565b600080604083850312156110f3576110f2611043565b5b600061110185828601611091565b9250506020611112858286016110c7565b9150509250929050565b60008115159050919050565b6111318161111c565b82525050565b600060208201905061114c6000830184611128565b92915050565b61115b816110a6565b82525050565b60006020820190506111766000830184611152565b92915050565b60008060006060848603121561119557611194611043565b5b60006111a386828701611091565b93505060206111b486828701611091565b92505060406111c5868287016110c7565b9150509250925092565b600060ff82169050919050565b6111e5816111cf565b82525050565b600060208201905061120060008301846111dc565b92915050565b60006020828403121561121c5761121b611043565b5b600061122a84828501611091565b91505092915050565b61123c81611068565b82525050565b60006020820190506112576000830184611233565b92915050565b60006020828403121561127357611272611043565b5b6000611281848285016110c7565b91505092915050565b600080604083850312156112a1576112a0611043565b5b60006112af85828601611091565b92505060206112c085828601611091565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131157607f821691505b602082108103611324576113236112ca565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611364826110a6565b915061136f836110a6565b925082820261137d816110a6565b915082820484148315176113945761139361132a565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006113d5826110a6565b91506113e0836110a6565b9250826113f0576113ef61139b565b5b828204905092915050565b6000611406826110a6565b9150611411836110a6565b92508282039050818111156114295761142861132a565b5b92915050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b600061148b602883610f9c565b91506114968261142f565b604082019050919050565b600060208201905081810360008301526114ba8161147e565b9050919050565b7f4665652070657263656e7461676520746f6f2068696768000000000000000000600082015250565b60006114f7601783610f9c565b9150611502826114c1565b602082019050919050565b60006020820190508181036000830152611526816114ea565b9050919050565b6000611538826110a6565b9150611543836110a6565b925082820190508082111561155b5761155a61132a565b5b92915050565b60006060820190506115766000830186611233565b6115836020830185611152565b6115906040830184611152565b94935050505056fea26469706673582212204050bace4024c23d964f7ea114c9e53f465ad437c8501fe45a121f74133f1c0164736f6c634300081b0033";

type FortYConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FortYConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FortY__factory extends ContractFactory {
  constructor(...args: FortYConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override deploy(
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialSupply, overrides || {}) as Promise<
      FortY & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FortY__factory {
    return super.connect(runner) as FortY__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FortYInterface {
    return new Interface(_abi) as FortYInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FortY {
    return new Contract(address, _abi, runner) as unknown as FortY;
  }
}
